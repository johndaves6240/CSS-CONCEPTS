:root{
    --clr-dark: #0e1117;
    --clr-white: white;
}

.dark-mode{
    --clr-dark: #0e1117;
    --clr-white: white;

}

body{
    background-color: var(--clr-white);
    color: var(--clr-dark);
    overflow-x: hidden;
}
h1{
    position: relative;
 }
 
 h1:hover{
     text-decoration: underline;
 }
/* start of layout practice, specifically grid layouting */
.container-grid{
    width: 50%;
    border-style: solid;
    border-color: red;
    margin-left: auto;
    margin-right: auto;
    margin-top: 20px;
    margin-bottom: 50px;

    /* start of grid properties */
    display: grid;
    /* grid-template-rows:100px 100px 100px 100px 100px 100px;
    grid-template-columns: 100px 100px 100px 100px 100px 100px; */

    /* another way of defining grids */
    grid-template-rows:100px 100px;
    grid-template-columns: 1fr 2fr 1fr;

    /* implicit grid */
    /* grid-auto-rows: 100px;
    grid-auto-flow: row; */

    /* grid-auto-columns: 100px;
    grid-auto-flow: column; */


}

.boxGrid{
    background-color: darksalmon;
    border-style: solid;
    border-color:darkslategray;
}

.grid-1{
    /* grid-row-start: 1;
    grid-row-end: 3;
    grid-column-start: 1;
    grid-column-end: 5; */

    /* shortcut */
    /* grid-row: 1/3;
    grid-column: 1/7; */
}

.grid-2{
    /* grid-row-start: 1;
    grid-row-end: 3;
    grid-column-start: 1;
    grid-column-end: 5; */

    /* shortcut */
    /* grid-row: 1/3;
    grid-column: 5/7; */

    /* efficient shortcut: "whereever you are currently are span yourself in to n" */
    /* grid-row: span 2;
    grid-column: span 2; */

    /* row-start / column-start / row-end / column-end */
    /* grid-area: 2/4/4/6;
    z-index: 1; */
}

.grid-3{
    /* guide for a better shortcut for grid the "grid-area" */
    /* grid-area: row-start / column-start / row-end / column-end; */
    /* grid-area: 3/1/7/7 ; */
}

/* --------------------------------------------------------------------------------- */
/* start of layout practice, specifically flex layouting */
.container-flex{
    width: 50%;
    height: 70vh;
    border-style: solid;
    border-color: red;
    margin: auto;
    display: flex;
    flex-wrap: wrap;
    /* gap: 1em; */
    flex-direction: row;
    /* justify-content: center; */

    /* only use align-content when there is a flex-wrap so that it all the contianer be put together no gap */
    /* align-content: start;  */
    align-items: flex-start;
}

.box-1,
.box-2,
.box-3,
.box-4,
.box-5,
.box-6,
.box-7{
    width: 100px;
    height: 100px;
    background-color: darksalmon;
    border-style: solid;
    border-color:darkslategray;
    display: flex;
    justify-content: center;
    align-items: center;
}

.box-3{
    /* //grows the flex */
    /* flex-grow: 1; */
    /* if value is 5 it shrink fast but if it 0 it does not shrink at all */
    /* flex-shrink: ;
    flex-basis: ; */
    flex: 1;
   flex-shrink: 0;
    align-self: center;
}


/* --------------------------------------------------------------------------------------- */
/* start of positioning practice */
.container{
    margin-left: auto;
    margin-right: auto;
    margin-top: 300px;
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    width: 50%;
    border-style: solid;
    border-color: red; 
    /* justify-content: center;
    align-items: center; */
    position: relative;
}

.item-1,
.item-2,
.item-3,
.item-4,
.item-5,
.item-6,
.item-7,
.item-8,
.item-9,
.item-10,
.item-11,
.item-12{
    display: flex;
    justify-content: center;
    align-items: center;
    width: 178px;
    height: 178px;
    border-radius: 15px;
}

.item-1{
    background-color: antiquewhite;
    /* position: absolute;
    top: -50px;
    right: -50px;
    z-index: -1; */
    
    /* position: relative;
    top: 100px;
    left: 100px; */

    /* SAME AS HEADER. Position fixed positions itself relative to the html document */
    position: fixed;
    bottom: 0px;
    left: 0px;
    border-radius: 0;
    width: 100%;
    height: 10%;
    z-index: 1;
}

/* .item-2{
    background-color:burlywood;
} */
/* .item-3{
    background-color:cadetblue;
} */

/* .item-4{
    background-color: yellowgreen;
} */

.item-5{
    background-color: rgb(32, 144, 140);
}
.item-6{
    background-color:coral;
   
    /* sticky only works if define our top property */
    position: sticky;
    top: 50px;
}
/* .item-7{
    background-color:cornflowerblue;
} */
.item-8{
    background-color:darkorange;

    /* making item-8 as header */
    /* position: fixed;
    top: 0px;
    left: 0px;
    border-radius: 0;
    width: 100%;
    height: 10%; */
}
.item-9{
    background-color:darkslateblue;
}
.item-10{
    background-color:gold;
}
.item-11{
    background-color:indigo;
}
.item-12{
    background-color:moccasin;
}



/* ----------------------------------------------- */
/* //transition PART */

.item-3{
    background-color:cadetblue;
    position: absolute;
    top: -40%;
    right:40%;



    /* //transition part */
    /* transition-property: transform;
    transition-duration: 0.3s;
    transition-timing-function:ease-out;
    transition-delay: 0s; */

    /* shortcut. We cam also add animation to our background color and our text color with its duration time. */
    /* transition: transform 0.3s ease 0s, background-color 2s, color 2s; */

    /* another shortcut if they all share the same duration */
    transition: all 1s;

}

.item-3:hover{
    transform: translateY(-50px);
    background-color: black;
    color: white;

}

/* ------------------------------------------------------- */
/* ANIMATION PART */
@keyframes slideInLeft{
    from{
        transform: translateX(-300px); 
    }
    
    to{
        transform: translateX(0);
    }
    
}

@keyframes rotate{
    from{
        transform: rotate(0);
    }

    to{
        transform: rotate(360deg);

    }
}

@keyframes changeShape{
    from{
        border-radius: 15px;
    }
    to{
        border-radius: 50%;
    }
}

/* utility class for animation */
.slideInLeft{
    animation: slideInLeft 2s ease 0s infinite normal forwards;
}
.rotate{
    animation: rotate 1s linear 0s infinite normal forwards;
}
.changeShape{
    animation: changeShape 2s ease-in 0s infinite normal forwards;
}

.item-2{
    background-color:burlywood;

    /* animation part */
    /* animation-name: slideInLeft;
    animation-duration: 2s;
    animation-timing-function: ease;
    animation-delay: 0s;
    animation-iteration-count: 2;
    animation-direction: normal; */
    /* change it to forward to get the last frame   */
    /* animation-fill-mode:forwards; */

    /* shortcut */
    /* animation: slideInLeft 2s ease 0s 2 normal forwards; */
    
}

/* create utility class */




.item-4{
    background-color: yellowgreen;
}

.item-5:hover{
    animation: rotate 1s linear 0s infinite normal forwards;
}

.item-7{
    background-color:cornflowerblue;
    transition: all 1s;
}

.item-7:hover{
    /* animation: changeShape 1s ease-in 0s 1 normal forwards; */
    border-radius: 50%;
   
}
